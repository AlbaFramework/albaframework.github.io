import{_ as n,c as a,o as s,a as t}from"./app.e77cd6bb.js";const g='{"title":"Routing","description":"","frontmatter":{},"headers":[{"level":2,"title":"Basic routing","slug":"basic-routing"},{"level":2,"title":"Route parameters","slug":"route-parameters"},{"level":2,"title":"Regular expression parameters","slug":"regular-expression-parameters"},{"level":2,"title":"Navigate to a new route","slug":"navigate-to-a-new-route"},{"level":2,"title":"Navigate back","slug":"navigate-back"},{"level":2,"title":"Remove a route","slug":"remove-a-route"},{"level":2,"title":"Restoration","slug":"restoration"},{"level":2,"title":"Next features","slug":"next-features"}],"relativePath":"guide/routing.md","lastUpdated":1642948535412}',e={},o=t(`<h1 id="routing" tabindex="-1">Routing <a class="header-anchor" href="#routing" aria-hidden="true">#</a></h1><p>Simple URL based routing.</p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>Routing works in web, but it doesn&#39;t have full support yet.</p></div><h2 id="basic-routing" tabindex="-1">Basic routing <a class="header-anchor" href="#basic-routing" aria-hidden="true">#</a></h2><p>To enable routing, you should define <code>routerRootConfiguration</code>. It needs some route definitions.</p><div class="language-dart"><pre><code><span class="token keyword">var</span> routes <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token class-name">RouteDefinition</span><span class="token punctuation">(</span>
    <span class="token string">&#39;/not-found&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">(</span>context<span class="token punctuation">,</span> arguments<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token keyword">const</span> <span class="token class-name">NotFoundScreen</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token class-name">RouteDefinition</span><span class="token punctuation">(</span>
    <span class="token string">&#39;/&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">(</span>context<span class="token punctuation">,</span> arguments<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token keyword">const</span> <span class="token class-name">HomeScreen</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token class-name">App</span><span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span>
    appProviders<span class="token punctuation">:</span> <span class="token punctuation">[</span>
    routerRootConfiguration<span class="token punctuation">:</span> <span class="token class-name">RouterRootConfiguration</span><span class="token punctuation">(</span>
      routeDefinitions<span class="token punctuation">:</span> routes<span class="token punctuation">,</span>
    <span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><h2 id="route-parameters" tabindex="-1">Route parameters <a class="header-anchor" href="#route-parameters" aria-hidden="true">#</a></h2><p>Normally you need parametrize routes. For example, you may need to get post id from the route.</p><div class="language-dart"><pre><code><span class="token class-name">RouteDefinition</span><span class="token punctuation">(</span>
  <span class="token string">&#39;/post/:post&#39;</span><span class="token punctuation">,</span>
  <span class="token punctuation">(</span>context<span class="token punctuation">,</span> parameters<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token keyword">const</span> <span class="token class-name">PostScreen</span><span class="token punctuation">(</span>parameters<span class="token punctuation">[</span><span class="token string">&#39;post&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span><span class="token punctuation">,</span>
</code></pre></div><p>Route parameters are always start by colon <code>:</code>. Parameters are collected in the <code>parameters</code> map, where keys are parameter names.</p><h2 id="regular-expression-parameters" tabindex="-1">Regular expression parameters <a class="header-anchor" href="#regular-expression-parameters" aria-hidden="true">#</a></h2><p>In case you need a fine tune match, you can define a regular expression for your parameters.</p><div class="language-dart"><pre><code><span class="token class-name">RouteDefinition</span><span class="token punctuation">(</span>
  <span class="token string">&#39;/post/:post(\\d+)&#39;</span><span class="token punctuation">,</span>
  <span class="token punctuation">(</span>context<span class="token punctuation">,</span> parameters<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">&gt;</span> <span class="token keyword">const</span> <span class="token class-name">PostScreen</span><span class="token punctuation">(</span>parameters<span class="token punctuation">[</span><span class="token string">&#39;post&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span><span class="token punctuation">,</span>
</code></pre></div><p>Expressions are encased within parentheses <code>()</code> following the parameter name.</p><h2 id="navigate-to-a-new-route" tabindex="-1">Navigate to a new route <a class="header-anchor" href="#navigate-to-a-new-route" aria-hidden="true">#</a></h2><p>On a build context you can get the <code>RouterState</code> and then <code>push</code> a new route.</p><div class="language-dart"><pre><code><span class="token class-name">Router</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">&#39;/post/5&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="navigate-back" tabindex="-1">Navigate back <a class="header-anchor" href="#navigate-back" aria-hidden="true">#</a></h2><p>The easiest way to navigate back is to call the <code>pop</code> method.</p><div class="language-dart"><pre><code><span class="token class-name">Router</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>Also, the router listens to <code>Navigator</code> pop events so that actions like press the back button works successful.</p><h2 id="remove-a-route" tabindex="-1">Remove a route <a class="header-anchor" href="#remove-a-route" aria-hidden="true">#</a></h2><p>Previous routes can be removed.</p><div class="language-dart"><pre><code><span class="token class-name">Router</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token string">&#39;/post/5&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h2 id="restoration" tabindex="-1">Restoration <a class="header-anchor" href="#restoration" aria-hidden="true">#</a></h2><p>The router is restored automatically. Just make sure <code>restorationScopeId</code> is set in your <code>MaterialApp</code>/<code>CupertinoApp</code> /<code>WidgetsApp</code>.</p><h2 id="next-features" tabindex="-1">Next features <a class="header-anchor" href="#next-features" aria-hidden="true">#</a></h2><ul><li>Nested routers</li><li>Middlewares</li><li>Full web support</li></ul>`,28),p=[o];function c(u,i,r,l,k,d){return s(),a("div",null,p)}var m=n(e,[["render",c]]);export{g as __pageData,m as default};
